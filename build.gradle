plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id "com.netflix.dgs.codegen" version "6.2.1"


}
ext {
    graphQLPluginVersion = "2.4"
    netflixDgsVersion = "9.0.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    google()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}


dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3"

    // graphql
      implementation 'org.springframework.boot:spring-boot-starter-graphql'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-webflux'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


}

tasks.named('test') {
    useJUnitPlatform()
}


generateJava{
    schemaPaths = ["${projectDir}/src/main/resources/graphql"]
    packageName = 'com.example.demo.generated'
    generateClient = true
    generateDataTypes = true

}

dependencyManagement {
    imports {
        mavenBom("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release")
    }
}

